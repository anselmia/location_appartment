# Generated by Django 5.2 on 2025-06-03 17:33

import datetime
import django.db.models.deletion
import logement.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='', max_length=50, unique=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('requires_min_nights', models.BooleanField(default=False)),
                ('requires_days_before', models.BooleanField(default=False)),
                ('requires_date_range', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('icon', models.CharField(blank=True, help_text='FontAwesome icon class or image name', max_length=100)),
                ('type', models.CharField(choices=[('comfort', 'Confort & Accessibilité'), ('kitchen', 'Cuisine'), ('connectivity', 'Technologie & Connectivité'), ('bed_bath', 'Chambre & Salle de bain'), ('parking', 'Stationnement'), ('outdoor', 'Extérieur'), ('children', 'Équipements pour enfants'), ('security', 'Sécurité'), ('entertainment', 'Divertissement'), ('wellness', 'Bien-être'), ('cleaning', 'Entretien'), ('climate', 'Climatisation & Chauffage'), ('other', 'Autres')], default='other', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code_postal', models.CharField(max_length=10)),
            ],
            options={
                'unique_together': {('name', 'code_postal')},
            },
        ),
        migrations.CreateModel(
            name='Logement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('rules', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('adresse', models.CharField(max_length=255)),
                ('statut', models.CharField(choices=[('open', 'Ouvert'), ('close', 'Fermé')], default='close', max_length=20)),
                ('type', models.CharField(choices=[('house', 'Maison'), ('flat', 'Appartement'), ('room', 'Chambre')], default='flat', max_length=20)),
                ('max_traveler', models.IntegerField(default=4)),
                ('nominal_traveler', models.IntegerField(default=4)),
                ('caution', models.IntegerField(default=0)),
                ('fee_per_extra_traveler', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('cleaning_fee', models.DecimalField(decimal_places=2, default=49, max_digits=6)),
                ('tax', models.DecimalField(decimal_places=2, default=6.7, max_digits=6)),
                ('tax_max', models.DecimalField(decimal_places=2, default=6.43, max_digits=6)),
                ('admin_fee', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('cancelation_period', models.IntegerField(default=15)),
                ('superficie', models.IntegerField(blank=True, null=True)),
                ('bathrooms', models.IntegerField(default=1)),
                ('bedrooms', models.IntegerField(default=1)),
                ('beds', models.IntegerField(default=1)),
                ('ready_period', models.IntegerField(default=1)),
                ('entrance_hour_min', models.TimeField(default=datetime.time(15, 0))),
                ('entrance_hour_max', models.TimeField(default=datetime.time(20, 0))),
                ('leaving_hour', models.TimeField(default=datetime.time(11, 0))),
                ('max_days', models.IntegerField(default=60)),
                ('availablity_period', models.IntegerField(default=6)),
                ('animals', models.BooleanField(default=False)),
                ('smoking', models.BooleanField(default=False)),
                ('airbnb_link', models.URLField(blank=True, null=True)),
                ('airbnb_calendar_link', models.URLField(blank=True, null=True)),
                ('booking_link', models.URLField(blank=True, null=True)),
                ('booking_calendar_link', models.URLField(blank=True, null=True)),
                ('map_link', models.URLField(blank=True, max_length=500, null=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administered_logements', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ManyToManyField(blank=True, related_name='logements', to='logement.equipment')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_logements', to=settings.AUTH_USER_MODEL)),
                ('ville', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city', to='logement.city')),
            ],
        ),
        migrations.CreateModel(
            name='ExtraCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_charges', to='logement.logement')),
            ],
            options={
                'verbose_name': 'Extra Charge',
                'verbose_name_plural': 'Extra Charges',
            },
        ),
        migrations.CreateModel(
            name='CloseDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='night_state', to='logement.logement')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=6)),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='night_price', to='logement.logement')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='logement.logement')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=logement.models.upload_to)),
                ('image_webp', models.ImageField(blank=True, editable=False, null=True, upload_to='logement_images/webp/')),
                ('order', models.IntegerField(default=0)),
                ('rotation', models.IntegerField(choices=[(0, '0°'), (90, '90°'), (180, '180°'), (270, '270°')], default=0)),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='logement.logement')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photos', to='logement.room')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('value', models.DecimalField(decimal_places=2, help_text='En pourcentage', max_digits=5)),
                ('min_nights', models.IntegerField(blank=True, help_text='Durée minimale du séjour', null=True)),
                ('exact_nights', models.IntegerField(blank=True, help_text='Appliqué uniquement pour cette durée exacte', null=True)),
                ('days_before_min', models.IntegerField(blank=True, help_text='Réservation au moins X jours avant (early bird)', null=True)),
                ('days_before_max', models.IntegerField(blank=True, help_text='Réservation moins de X jours avant (last minute)', null=True)),
                ('start_date', models.DateField(blank=True, help_text="Date de début d'application", null=True)),
                ('end_date', models.DateField(blank=True, help_text="Date de fin d'application", null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('discount_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='logement.discounttype')),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='logement.logement')),
            ],
            options={
                'unique_together': {('logement', 'discount_type', 'name')},
            },
        ),
    ]
